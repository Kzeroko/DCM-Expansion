buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        maven { url = 'https://jitpack.io' }
        maven { url = 'https://modmaven.dev/' }

        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'


version = '0.7.1+1.18.2'
group = 'net.kzeroko.dcmexpansion'
archivesBaseName = 'dcmexpansion'


java.toolchain.languageVersion = JavaLanguageVersion.of(17)

mixin {
    add sourceSets.main, "dcmexpansion.mixin.refmap.json"
    config "dcmexpansion.mixin.json"
}

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'parchment', version: '2022.11.06-1.18.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'mixin.env.disableRefMap', 'true'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'dcmexpansion'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                dcmexpansion {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'mixin.env.disableRefMap', 'true'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'dcmexpansion'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                dcmexpansion {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'mixin.env.disableRefMap', 'true'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'dcmexpansion'

            mods {
                dcmexpansion {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'mixin.env.disableRefMap', 'true'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'dcmexpansion', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                dcmexpansion {
                    source sourceSets.main
                }
            }
        }
    }
}


sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = 'Modrinth'
        url = 'https://api.modrinth.com/maven'
        content {
            includeGroup 'maven.modrinth'
        }
    }
    maven {
        url "https://maven.shedaniel.me/"
    }
    maven {
        name = "Progwml6's maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        name "KosmX's maven"
        url 'https://maven.kosmx.dev/'
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }
    mavenLocal()
}

dependencies {
    minecraft "net.minecraftforge:forge:1.18.2-${forge_version}"

    // Cloth Config
    compileOnly fg.deobf("me.shedaniel.cloth:cloth-config-forge:${cloth_config_version}")
    runtimeOnly fg.deobf("me.shedaniel.cloth:cloth-config-forge:${cloth_config_version}")

    // JEI
    compileOnly(fg.deobf("mezz.jei:jei-1.18.2-common-api:${jei_version}"))
    compileOnly(fg.deobf("mezz.jei:jei-1.18.2-forge-api:${jei_version}"))
    runtimeOnly(fg.deobf("mezz.jei:jei-1.18.2-forge:${jei_version}"))

    // First Aid
    runtimeOnly fg.deobf("curse.maven:creativecore-257814:4629846")
    //implementation fg.deobf(files("../DCM-expansion/externalmods/firstaid-1.11.1.jar"))
    implementation fg.deobf("curse.maven:first-aid-276837:3860237")

    // Hordes
    compileOnly fg.deobf(files("../DCM-expansion/externalmods/Atlas-Lib-1.18.2-1.1.8.jar"))
    compileOnly fg.deobf(files("../DCM-expansion/externalmods/The-Hordes-1.18.2-1.1.6a.jar"))

    // Better Combat
    //implementation fg.deobf("dev.kosmx.player-anim:player-animation-lib-forge:${player_anim_version}")
    //implementation fg.deobf('maven.modrinth:better-combat:1.6.2+1.18.2-forge')

    // Curios API
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}:api")

    // Better Combat
    implementation fg.deobf('maven.modrinth:better-combat:1.6.2+1.18.2-forge')

    // Crayfish Gun Mod
    implementation fg.deobf('curse.maven:framework-549225:4613856')
    //implementation fg.deobf('curse.maven:mrcrayfishs-gun-mod-289479:4344223')

    // TACZ
    implementation fg.deobf(files("../DCM-expansion/externalmods/tacz-1.18.2-1.0.2-release.jar"))

    // Immersive Aircraft
    compileOnly fg.deobf(files("../DCM-expansion/externalmods/immersive_aircraft-0.5.2+1.18.2-forge.jar"))

    // Weather
    implementation fg.deobf(files("../DCM-expansion/externalmods/coroutil-forge-1.18.2-1.3.6.jar"))
    implementation fg.deobf(files("../DCM-expansion/externalmods/weather2-1.18.2-2.7.5.jar"))

    // Cold Sweat
    compileOnly fg.deobf(files("../DCM-expansion/externalmods/ColdSweat-2.2.5.1.jar"))

    // Thirst Was Taken
    compileOnly fg.deobf(files("../DCM-expansion/externalmods/ThirstWasTaken-1.18.2-1.3.5.jar"))

    // PNCR
    implementation fg.deobf('curse.maven:pneumaticcraft-repressurized-281849:4704091')

    // Mekanism
    compileOnly "mekanism:Mekanism:${mek_version}:api"
    compileOnly "mekanism:Mekanism:${mek_version}"
    runtimeOnly fg.deobf("mekanism:Mekanism:${mek_version}:additions")
    runtimeOnly fg.deobf("mekanism:Mekanism:${mek_version}:generators")
    runtimeOnly fg.deobf("mekanism:Mekanism:${mek_version}:tools")

    // Immersive Engineering
    implementation fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:${ie_version}")

    // Security Craft
    implementation fg.deobf('curse.maven:security-craft-64760:5424858')

    // Mixin
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}


jar {
    manifest {
        attributes([
                "Specification-Title"     : "dcmexpansion",
                "Specification-Vendor"    : "dcmexpansion",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "dcmexpansion",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "dcmexpansion.mixin.json"
        ])
    }
}

jar.finalizedBy('reobfJar')


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
